From 2fb66deb2e5385f269328bb1c8b9830d15684716 Mon Sep 17 00:00:00 2001
From: Jeanneclre <jeanne.claret@cpe.fr>
Date: Mon, 22 Jan 2024 10:48:34 -0500
Subject: [PATCH 1/4] STYLE: function to install required libraries

---
 AMASSS/AMASSS.py         | 91 +++++++++++++++++++++++++++++++++++++---
 AMASSS_CLI/AMASSS_CLI.py | 80 +++++++----------------------------
 2 files changed, 101 insertions(+), 70 deletions(-)

diff --git a/AMASSS/AMASSS.py b/AMASSS/AMASSS.py
index c0f3441..d66d002 100644
--- a/AMASSS/AMASSS.py
+++ b/AMASSS/AMASSS.py
@@ -14,9 +14,80 @@ import time
 import shutil
 import vtk, qt, slicer
 from slicer.ScriptedLoadableModule import *
-from slicer.util import VTKObservationMixin
+from slicer.util import VTKObservationMixin, pip_install
 
 import webbrowser
+import pkg_resources
+
+def check_lib_installed(lib_name, required_version=None):
+    '''
+    Check if the library with the good version (if needed) is already installed in the slicer environment 
+    input: lib_name (str) : name of the library
+            required_version (str) : required version of the library (if None, any version is accepted)
+    output: bool : True if the library is installed with the good version, False otherwise
+    '''
+   
+    try:
+        installed_version = pkg_resources.get_distribution(lib_name).version
+        # check if the version is the good one - if required_version != None it's considered as a True
+        if required_version and installed_version != required_version:
+          return False
+        else:
+          return True
+    except pkg_resources.DistributionNotFound:
+        return False
+
+# import csv
+
+def install_function(list_libs:list):
+    '''
+    Test the necessary libraries and install them with the specific version if needed
+    User is asked if he wants to install/update-by changing his environment- the libraries with a pop-up window
+    '''
+    libs = list_libs
+    libs_to_install = []
+    libs_to_update = []
+    for lib, version in libs:
+        if not check_lib_installed(lib, version):
+            try:
+              # check if the library is already installed
+              if pkg_resources.get_distribution(lib).version:
+                libs_to_update.append((lib, version))
+            except:
+              libs_to_install.append((lib, version))
+            
+    if libs_to_install or libs_to_update:
+          message = "The following changes are required for the libraries:\n"
+
+          #Specify which libraries will be updated with a new version 
+          #and which libraries will be installed for the first time
+          if libs_to_update:
+              
+              message += "\nLibraries to update (version mismatch):\n"
+              message += "\n".join([f"{lib} (current: {pkg_resources.get_distribution(lib).version}) -> {version}" for lib, version in libs_to_update])
+
+          if libs_to_install:
+              message += "\nLibraries to install:\n"
+              message += "\n".join([f"{lib}=={version}" if version else lib for lib, version in libs_to_install])
+
+          message += "\n\nDo you agree to modify these libraries? Doing so could cause conflicts with other installed Extensions."
+          message += "\n\n (If you are using other extensions, consider downloading another Slicer to use AutomatedDentalTools exclusively.)"
+          
+          user_choice = slicer.util.confirmYesNoDisplay(message)
+
+          if user_choice:
+              for lib, version in libs_to_install:
+                  lib_version = f'{lib}=={version}' if version else lib
+                  pip_install(lib_version)
+              
+              for lib, version in libs_to_update:
+                  lib_version = f'{lib}=={version}' if version else lib
+                  pip_install(lib_version)
+              return True
+          else :
+            return False
+    else:
+        return True
 
 #region ========== FUNCTIONS ==========
 def GetSegGroup(group_landmark):
@@ -603,7 +674,18 @@ class AMASSSWidget(ScriptedLoadableModuleWidget, VTKObservationMixin):
 
     #region == RUN ==
   def onPredictButton(self):
-
+    import platform
+    # first, install the required libraries and their version
+    list_libs = [('torch', None),('torchvision', None),('torchaudio',None),('itk', None), ('dicom2nifti', None), ('monai', '0.7.0'),('einops',None),('nibabel',None),('connected-components-3d','3.9.1')]
+    
+    if platform.system() == "Windows":
+      list_libs= [('torch', 'cu118'),('torchvision', 'cu118'),('torchaudio','cu118'),('itk', None), ('dicom2nifti', None), ('monai', '0.7.0'),('einops',None),('nibabel',None),('connected-components-3d','3.9.1')]
+
+    libs_installation = install_function(list_libs)
+    if not libs_installation:
+      qt.QMessageBox.warning(self.parent, 'Warning', 'The module will not work properly without the required libraries.\nPlease install them and try again.')
+      return  # stop the function
+    
     ready = True
 
     if self.folder_as_input:
@@ -623,9 +705,6 @@ class AMASSSWidget(ScriptedLoadableModuleWidget, VTKObservationMixin):
       return
 
     # scan_folder = self.ui.lineEditScanPath.text
-
-
-
     # self.input_path =  '/home/luciacev/Desktop/REQUESTED_SEG/BAMP_SegPred'
     # self.input_path = '/home/luciacev/Desktop/TEST_SEG/TEMP/AnaJ_Scan_T1_OR.gipl.gz'
     # self.model_folder = '/home/luciacev/Desktop/Maxime_Gillot/Data/AMASSS/FULL_FACE_MODELS'
@@ -802,7 +881,7 @@ class AMASSSWidget(ScriptedLoadableModuleWidget, VTKObservationMixin):
 
 
   def onProcessUpdate(self,caller,event):
-
+    
     # print(caller.GetProgress(),caller.GetStatus())
 
     # self.ui.TimerLabel.setText(f"Time : {self.startTime:.2f}s")
diff --git a/AMASSS_CLI/AMASSS_CLI.py b/AMASSS_CLI/AMASSS_CLI.py
index c59eb8d..9468305 100644
--- a/AMASSS_CLI/AMASSS_CLI.py
+++ b/AMASSS_CLI/AMASSS_CLI.py
@@ -21,58 +21,28 @@ import glob
 import sys
 import platform
 
-# try:
-#     import argparse
-# except ImportError:
-#     pip_install('argparse')
-#     import argparse
-
-
-# print(sys.argv)
-
 
-from slicer.util import pip_install, pip_uninstall
+import torch
+import dicom2nifti
+import itk
+import cc3d
 
-# from slicer.util import pip_uninstall
-# # pip_uninstall('torch torchvision torchaudio')
+import SimpleITK as sitk
+import vtk
+import numpy as np
 
-# pip_uninstall('monai')
 
-# try :
-#     import logic
+# try:
+#     import torch
 # except ImportError:
+#     if platform.system() == "Windows":
+#         pip_install('torch torchvision torchaudio --extra-index-url https://download.pytorch.org/whl/cu118 -q')
+#     else:
+#         pip_install('torch torchvision torchaudio --extra-index-url https://download.pytorch.org/whl/cu113 -q')
+#     import torch
 
 
-try:
-    import torch
-except ImportError:
-    if platform.system() == "Windows":
-        pip_install('torch torchvision torchaudio --extra-index-url https://download.pytorch.org/whl/cu118 -q')
-    else:
-        pip_install('torch torchvision torchaudio --extra-index-url https://download.pytorch.org/whl/cu113 -q')
-    import torch
-
-try:
-    import nibabel
-except ImportError:
-    pip_install('nibabel -q')
-    import nibabel
-
-try:
-    import einops
-except ImportError:
-    pip_install('einops -q')
-    import einops
-
-try:
-    import dicom2nifti
-except ImportError:
-    pip_install('dicom2nifti -q')
-    import dicom2nifti
-
 #region try import
-pip_uninstall('monai -q')
-pip_install('monai==0.7.0 -q')
 from monai.networks.nets import UNETR
 
 from monai.data import (
@@ -92,26 +62,8 @@ from monai.transforms import (
 
 from monai.inferers import sliding_window_inference
 
-import SimpleITK as sitk
-import vtk
-import numpy as np
-try :
-    import itk
-except ImportError:
-    pip_install('itk -q')
-    import itk
-
-
-try:
-    import cc3d
-except ImportError:
-    pip_install('connected-components-3d==3.9.1 -q')
-    import cc3d
-
- #endregion
-
-
-
+# pip_install('connected-components-3d==3.9.1 -q') #Could connected-components-3d be replaced with itk.connected_component_image_filter or itk.scalar_connected_component_image_filter
+   
 # endregion
 
 #region Global variables
-- 
2.34.1

